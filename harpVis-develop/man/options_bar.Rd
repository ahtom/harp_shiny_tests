% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options_bar.R
\name{options_barUI}
\alias{options_barUI}
\alias{options_bar}
\title{Module for reading harp verification files in a Shiny app}
\usage{
options_barUI(id)

options_bar(input, output, session)
}
\arguments{
\item{id}{An ID string for the module's UI}

\item{input}{input reactive}

\item{output}{output reactive}

\item{session}{Session from which to make a child scope (the default should
almost always be used).}
}
\value{
A reactive list containing the loaded harp verification object
}
\description{
This module is used to generate UI for options to load harp verification
files for display in a shiny app. It requires the following shinyOptions:
\itemize{
\item "app_start_dir" - the directory start the app in
\item "full_dir_navigation" - TRUE/FALSE - whether to make full file navigation
available via selection modal.
}
}
\examples{
library(shiny)

# With directory navigation modal
shinyOptions(
  app_start_dir = system.file("verification", package = "harpVis"),
  full_dir_navigation = TRUE
)

ui <- fluidPage(
  fluidRow(
    column(12,
      options_barUI("opts"),
    )
  ),
  fluidRow(
    column(12,
      verbatimTextOutput("str")
    )
  )
)

server <- function(input, output, session) {
  my_data <- callModule(options_bar, "opts")
  output$str <- renderPrint({
    str(my_data())
  })
}

if (interactive()) {
  shinyApp(ui, server)
}

# Directory navigation from dropdown
shinyOptions(full_dir_navigation = FALSE)

# need to remake the UI with new options
ui <- fluidPage(
  fluidRow(
    column(12,
      options_barUI("opts"),
    )
  ),
  fluidRow(
    column(12,
      verbatimTextOutput("str")
    )
  )
)

if (interactive()) {
  shinyApp(ui, server)
}
}
